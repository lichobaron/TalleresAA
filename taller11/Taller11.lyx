#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{algorithm}
\usepackage{algpseudocode}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Taller 11
\end_layout

\begin_layout Author
Carlos Barón - Andrés Cocunubo
\end_layout

\begin_layout Enumerate
Descripción del Problema
\end_layout

\begin_deeper
\begin_layout Standard
Se desea que la ficha de ajedrez del caballo recorra todo el tablero pasando
 una única vez por cada posición.
\end_layout

\end_deeper
\begin_layout Enumerate
Formalización
\end_layout

\begin_deeper
\begin_layout Enumerate
Entradas : 
\end_layout

\begin_deeper
\begin_layout Enumerate
Tablero de ajedrez: Sea una matriz 
\begin_inset Formula $T^{nxn}|n\in\mathbb{N}$
\end_inset

, donde el valor de cada celda es 
\begin_inset Formula $0$
\end_inset

 si no está visitado o 
\begin_inset Formula $1$
\end_inset

 de lo contrario.
\end_layout

\begin_layout Enumerate
Posición inicial del caballo: Posición 
\begin_inset Formula $i$
\end_inset

 
\begin_inset Formula $\land$
\end_inset

 
\begin_inset Formula $j$
\end_inset

 
\begin_inset Formula $|1\leq i\leq n$
\end_inset

 
\begin_inset Formula $\land$
\end_inset

 
\begin_inset Formula $1\leq j\leq n$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Salidas
\end_layout

\begin_deeper
\begin_layout Enumerate
Mensaje si es o no posible que la ficha recorra todo el tablero.
\end_layout

\begin_layout Enumerate
Secuencia de saltos: Secuencia 
\begin_inset Formula $S$
\end_inset

 de tamaño 
\begin_inset Formula $nxn$
\end_inset

 y con una relación de equivalencia, donde 
\begin_inset Formula $S[i]\neq S[1,...,i-1]\land S[i+1,...,|S|].$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Algoritmos
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Procedure
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

CalcularPosiciones
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $x,y,n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset

 
\series bold
let
\series default
 
\series bold

\begin_inset Formula $P$
\end_inset

 be
\series default
 an empty list
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset

 
\series bold
let
\series default
 
\series bold

\begin_inset Formula $V$
\end_inset

 
\begin_inset Formula $\leftarrow\{-2,-1,1,2\}$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $4$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $k\leftarrow x+V[i]$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $j\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $4$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $|V[i]|\neq|V[j]|$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

        
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $l\leftarrow y+V[j]$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

        
\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $k>0\land k\leq n\land l>0\land l\leq n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

          
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $P\cup[k,l]$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

        
\backslash
EndIf
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
EndIf
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
EndFor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
EndFor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset


\begin_inset Formula $P$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EndProcedure
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Calcular posiciones jugables
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Procedure
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

TodoVisitado
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $T,n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $v\leftarrow True$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $j\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $T[i][j]=0$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

        
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $v\leftarrow False$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
EndIf
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
EndFor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
EndFor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset


\begin_inset Formula $v$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EndProcedure
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Verificación jugadas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Procedure
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Caballo
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $T,x,y,n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $T[x][y]\leftarrow1$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $P\leftarrow CalcularPosiciones(x,y,n)$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $sol\leftarrow TodoVisitado(T,n)$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $i\leftarrow1$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
While
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $sol=False\land i\leq|P|$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $act\leftarrow P[i]$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $T[act.x][act.y]\neq1$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $T[act.x][act.y]\leftarrow1$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $<sol,S>\leftarrow Caballo(T,act.x,act.y,n)$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

        
\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $sol=True$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

          
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $p\leftarrow[act.x,act.y]$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

          
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $S\cup p$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

        
\backslash
Else
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

          
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $T[act.x][act.y]\leftarrow0$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

          
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $Clear$
\end_inset

 
\begin_inset Formula $S$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

        
\backslash
EndIf
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
EndIf
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $i\leftarrow i+1$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
EndWhile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset


\begin_inset Formula $<sol,S>$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EndProcedure
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Encontrar camino
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Procedure
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

FindPath
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $let$
\end_inset

 T 
\begin_inset Formula $\leftarrow$
\end_inset


\begin_inset Formula $\mathbb{N}^{nxn}$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset

 
\series bold
let
\series default
 
\series bold

\begin_inset Formula $S$
\end_inset

 be
\series default
 an empty list
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $path\leftarrow False$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $i,j\leftarrow0,0$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
While
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $path=False\land i<n$
\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
While
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $path=False\land j<n$
\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $path,S\leftarrow Caballo(T,i,j,n)$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

      
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $j\leftarrow j+1)$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
EndWhile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $i\leftarrow i+1)$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
EndWhile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
State
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Return
\end_layout

\end_inset


\begin_inset Formula $<path,S>$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EndProcedure
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Encontrar camino auxiliar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Análisis de la Solución
\end_layout

\begin_deeper
\begin_layout Standard
La solución presentada encuentra la secuencia que debe dar el caballo para
 recorrer todo el tablero.
 Dada una posición inicial, calcula las posibles casillas a las cuales puede
 saltar la ficha y luego determina si por ese camino se llega a una solución,
 este proceso se repite hasta que se encuentra un camino o se hallan recorrido
 todas las posiciones y con ninguna de ellas se pudo llegar a la solución.
\end_layout

\end_deeper
\begin_layout Enumerate
Invariante
\end_layout

\begin_deeper
\begin_layout Standard
La secuencia 
\begin_inset Formula $S$
\end_inset

 contiene los saltos correctos que el caballo ha dado hasta cierto momento
 y el tablero 
\begin_inset Formula $T$
\end_inset

 que contiene las posiciones visitadas y no visitadas hasta el momento.
\end_layout

\end_deeper
\begin_layout Enumerate
Complejidad
\end_layout

\begin_deeper
\begin_layout Standard
Para la función CalcularPosiciones por inspección se determina que su complejida
d es 
\begin_inset Formula $O(1)$
\end_inset

, ya que siempre calcula los ocho posibles movimientos que puede hacer el
 caballo.
\end_layout

\begin_layout Standard
Para TodoVisitado la complejidad por inspección es 
\begin_inset Formula $O(n^{2})$
\end_inset

 puesto que recorre todo el tablero verificando que se haya visitado.
\end_layout

\begin_layout Standard
Finalmente para la función Caballo por inspección su complejidad es 
\begin_inset Formula $O(n!)$
\end_inset

, porque cada vez que el caballo cambia de posición re-calcula las posibles
 posiciones.
 En una prueba realizada con un tablero de tamaño 
\begin_inset Formula $8x8$
\end_inset

 se tardó aproximadamente 30 minutos en hallar la solución.
\end_layout

\end_deeper
\end_body
\end_document
