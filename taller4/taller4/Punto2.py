##Punto 2
##Algoritmos minimo y maximo de un arreglo ordenado y rotado
import time
## -------------------------------------------------------------------------
##Solucion Eficiente
## -------------------------------------------------------------------------
##FindMinMaxElement: Encuentra el minimo y maximo de un arreglo ordenado y rotado
##Entradas:
##	- A: secuencia
##Salidas:
##	- indice del elemento minimo e indice del elemento maximo
## -------------------------------------------------------------------------
def FindMinMaxElement(A):
    return FindMinMaxElementHelper(A,0,len(A)-1)
##end def

## -------------------------------------------------------------------------
##FindMinMaxElementHelper: Funcion auxiliar para encuentrar el minimo y maximo
##de un arreglo ordenado y rotado
##Entradas:
##	- A: secuencia
##	- l: indice inicio secuencia
##  - h: indice fin secuencia
##Salidas:
##	- R: indice del elemento minimo e indice del elemento maximo
## -------------------------------------------------------------------------
def FindMinMaxElementHelper(A,l,h):
    R = []
    m = int((l+h)/2)
    if  A[h]>A[l]: #Caso Base
        R.append(l)
        R.append(h)
        return R
    #end if
    elif A[m]>A[m+1]: #Caso Base
        R.append(m+1)
        R.append(m)
        return R
    #end elif
    elif A[m-1]>A[m]: #Caso Base
        R.append(m)
        R.append(m-1)
        return R
    #end elif
    elif A[l]>A[m]:
        return FindMinMaxElementHelper(A,l,m)
    #end elif
    else:
        return FindMinMaxElementHelper(A,m+1,h)
    #end elif

## -------------------------------------------------------------------------
##Solucion Evidente
## -------------------------------------------------------------------------
##FindMinMaxElementEvident: Encuentra el minimo y maximo de un arreglo ordenado y rotado
##Entradas:
##	- A: secuencia
##Salidas:
##	- indice del elemento minimo e indice del elemento maximo
## -------------------------------------------------------------------------
def FindMinMaxElementEvident(A):
    return FindMinMaxElementEvidentHelper(A,0,len(A)-1)
##end def

## -------------------------------------------------------------------------
##FindMinMaxElementEvidentHelper: Funcion auxiliar para encuentrar el minimo y maximo
##de un arreglo ordenado y rotado
##Entradas:
##	- A: secuencia
##	- l: indice inicio secuencia
##  - h: indice fin secuencia
##Salidas:
##	- R: indice del elemento minimo e indice del elemento maximo
## -------------------------------------------------------------------------
def FindMinMaxElementEvidentHelper(A,l,h):
    R = []
    if  A[h]>A[l]:
        R.append(l)
        R.append(h)
        return R
    ##end if
    else:
        i = 0
        while(i<h and A[i] < A[i+1]):
            i= i+1
        ##end while
        R.append(i+1)
        R.append(i)
        return R
     ##end else

##Pruebas
#A = [67,89,90,23,25,34,50,60]
#A = [67,89,90,91,23,24,25]
#A= [1,2,3,4,5,6]
A = [7039, 7042, 7054, 7063, 7067, 7090, 7096, 7115, 7121, 7122, 7136, 7147, 7164, 7175, 7181, 7182, 7186, 7187, 7211, 7226, 7231, 7232, 7233, 7266, 7269, 7272, 7275, 7280, 7295, 7299, 7307, 7315, 7316, 7327, 7329, 7331, 7344, 7370, 7408, 7432, 7434, 7438, 7443, 7446, 7449, 7455, 7464, 7469, 7484, 7488, 7489, 7493, 7502, 7516, 7526, 7527, 7528, 7532, 7535, 7536, 7539, 7545, 7552, 7571, 7599, 7604, 7605, 7610, 7618, 7629, 7640, 7642, 7678, 7686, 7695, 7699, 7711, 7722, 7735, 7737, 7750, 7775, 7776, 7788, 7793, 7815, 7823, 7831, 7842, 7847, 7882, 7891, 7893, 7915, 7929, 7958, 7962, 7985, 8004, 8013, 8021, 8023, 8025, 8037, 8040, 8042, 8047, 8085, 8086, 8101, 8103, 8108, 8115, 8121, 8135, 8141, 8146, 8158, 8166, 8173, 8178, 8183, 8199, 8206, 8209, 8220, 8257, 8267, 8272, 8277, 8283, 8316, 8325, 8331, 8333, 8339, 8358, 8378, 8398, 8410, 8420, 8433, 8434, 8447, 8452, 8463, 8488, 8508, 8512, 8528, 8555, 8562, 8571, 8574, 8589, 8603, 8611, 8617, 8621, 8633, 8645, 8671, 8674, 8676, 8677, 8687, 8697, 8714, 8732, 8733, 8737, 8762, 8792, 8800, 8811, 8824, 8828, 8829, 8843, 8845, 8852, 8858, 8877, 8888, 8914, 8934, 8950, 8952, 8960, 8961, 8964, 9008, 9036, 9037, 9043, 9047, 9053, 9055, 9058, 9071, 9078, 9080, 9091, 9120, 9124, 9126, 9157, 9193, 9206, 9210, 9223, 9236, 9239, 9251, 9261, 9272, 9275, 9276, 9279, 9292, 9312, 9322, 9323, 9331, 9345, 9353, 9365, 9371, 9381, 9405, 9423, 9432, 9438, 9440, 9442, 9448, 9456, 9463, 9464, 9482, 9495, 9496, 9499, 9501, 9510, 9515, 9523, 9554, 9560, 9571, 9607, 9608, 9618, 9621, 9623, 9624, 9626, 9631, 9640, 9645, 9648, 9653, 9656, 9658, 9659, 9665, 9668, 9670, 9672, 9706, 9726, 9742, 9750, 9757, 9760, 9773, 9776, 9783, 9789, 9800, 9802, 9814, 9822, 9836, 9839, 9846, 9853, 9854, 9867, 9873, 9890, 9899, 9904, 9919, 9928, 9949, 9959, 9961, 9973, 9988, 9989, 9991, 21, 37, 40, 42, 46, 49, 51, 60, 74, 96, 102, 111, 116, 143, 160, 183, 186, 205, 245, 246, 266, 269, 273, 296, 300, 301, 303, 309, 312, 313, 330, 331, 355, 358, 372, 374, 393, 394, 397, 398, 436, 444, 446, 464, 467, 470, 480, 481, 487, 490, 506, 512, 515, 528, 530, 570, 596, 600, 608, 632, 634, 638, 652, 654, 655, 669, 694, 710, 719, 726, 736, 750, 755, 768, 770, 774, 800, 819, 849, 854, 857, 859, 868, 890, 893, 900, 909, 911, 923, 1003, 1009, 1019, 1025, 1039, 1067, 1071, 1082, 1089, 1090, 1096, 1138, 1147, 1167, 1191, 1200, 1201, 1209, 1211, 1217, 1257, 1264, 1267, 1282, 1288, 1306, 1324, 1337, 1349, 1358, 1367, 1368, 1370, 1373, 1383, 1391, 1403, 1409, 1411, 1413, 1417, 1427, 1432, 1440, 1446, 1467, 1503, 1510, 1512, 1530, 1541, 1554, 1582, 1588, 1589, 1593, 1600, 1603, 1617, 1633, 1645, 1655, 1671, 1678, 1691, 1705, 1710, 1729, 1743, 1746, 1750, 1774, 1775, 1780, 1787, 1795, 1807, 1810, 1817, 1822, 1837, 1839, 1842, 1852, 1856, 1892, 1899, 1903, 1909, 1917, 1927, 1928, 1930, 1931, 1936, 1941, 1948, 1952, 1956, 1958, 1986, 1987, 1992, 1996, 2002, 2007, 2008, 2010, 2028, 2029, 2033, 2035, 2036, 2037, 2042, 2058, 2068, 2082, 2125, 2126, 2139, 2155, 2164, 2166, 2167, 2173, 2177, 2189, 2214, 2226, 2245, 2253, 2258, 2262, 2271, 2280, 2301, 2318, 2327, 2347, 2349, 2351, 2352, 2355, 2357, 2377, 2381, 2383, 2386, 2416, 2422, 2435, 2437, 2445, 2459, 2466, 2480, 2499, 2500, 2515, 2520, 2530, 2531, 2540, 2541, 2553, 2564, 2584, 2586, 2588, 2594, 2600, 2618, 2620, 2621, 2622, 2629, 2634, 2646, 2657, 2661, 2663, 2687, 2691, 2696, 2702, 2705, 2717, 2725, 2730, 2732, 2752, 2768, 2774, 2786, 2803, 2804, 2831, 2856, 2859, 2869, 2873, 2887, 2889, 2903, 2918, 2924, 2934, 2947, 2959, 2974, 2975, 2980, 2992, 2993, 2995, 3011, 3021, 3025, 3050, 3055, 3086, 3095, 3102, 3105, 3107, 3184, 3206, 3216, 3217, 3224, 3233, 3235, 3241, 3251, 3261, 3263, 3276, 3285, 3308, 3310, 3334, 3344, 3354, 3365, 3370, 3380, 3403, 3407, 3422, 3440, 3443, 3447, 3450, 3460, 3468, 3471, 3495, 3521, 3530, 3533, 3554, 3564, 3572, 3576, 3582, 3584, 3598, 3603, 3610, 3625, 3630, 3631, 3633, 3663, 3666, 3670, 3672, 3678, 3682, 3683, 3686, 3705, 3706, 3722, 3727, 3728, 3731, 3733, 3735, 3752, 3762, 3770, 3824, 3835, 3859, 3867, 3878, 3879, 3898, 3899, 3925, 3931, 3934, 3977, 3991, 4000, 4003, 4007, 4008, 4020, 4028, 4060, 4088, 4111, 4117, 4120, 4139, 4167, 4171, 4175, 4185, 4187, 4191, 4225, 4228, 4232, 4237, 4244, 4278, 4301, 4320, 4331, 4334, 4338, 4344, 4363, 4365, 4385, 4393, 4399, 4464, 4478, 4480, 4498, 4511, 4512, 4526, 4542, 4545, 4550, 4551, 4563, 4568, 4574, 4584, 4586, 4597, 4599, 4601, 4625, 4639, 4641, 4653, 4680, 4681, 4685, 4686, 4736, 4742, 4745, 4769, 4778, 4781, 4783, 4784, 4787, 4794, 4809, 4810, 4815, 4823, 4829, 4846, 4853, 4861, 4869, 4876, 4880, 4886, 4888, 4889, 4896, 4903, 4916, 4922, 4967, 5000, 5012, 5039, 5040, 5043, 5049, 5056, 5074, 5075, 5090, 5095, 5115, 5116, 5123, 5139, 5171, 5180, 5189, 5192, 5194, 5207, 5219, 5223, 5246, 5252, 5255, 5274, 5314, 5317, 5322, 5340, 5342, 5350, 5365, 5371, 5378, 5383, 5421, 5428, 5432, 5435, 5445, 5463, 5471, 5475, 5490, 5494, 5499, 5520, 5537, 5538, 5540, 5542, 5546, 5548, 5549, 5569, 5585, 5587, 5598, 5600, 5617, 5623, 5624, 5634, 5636, 5649, 5650, 5654, 5669, 5673, 5682, 5697, 5725, 5729, 5760, 5767, 5769, 5772, 5775, 5782, 5786, 5797, 5833, 5850, 5851, 5869, 5883, 5886, 5893, 5897, 5898, 5900, 5916, 5920, 5930, 5933, 5946, 5962, 5986, 5988, 5989, 5991, 6006, 6016, 6031, 6048, 6053, 6055, 6059, 6061, 6064, 6078, 6089, 6097, 6124, 6130, 6137, 6141, 6144, 6155, 6158, 6170, 6179, 6197, 6198, 6199, 6203, 6214, 6217, 6219, 6232, 6238, 6241, 6255, 6256, 6258, 6343, 6345, 6353, 6379, 6390, 6418, 6447, 6451, 6470, 6473, 6477, 6487, 6499, 6507, 6512, 6525, 6527, 6529, 6536, 6559, 6577, 6579, 6583, 6599, 6616, 6626, 6637, 6643, 6650, 6657, 6672, 6691, 6697, 6714, 6716, 6720, 6741, 6746, 6761, 6762, 6771, 6775, 6784, 6791, 6823, 6833, 6835, 6837, 6842, 6848, 6852, 6856, 6864, 6865, 6867, 6883, 6889, 6891, 6892, 6904, 6910, 6911, 6914, 6947, 6948, 6969, 6989, 6991, 7015, 7021, 7026, 7027, 7031, 7035, 7036]

sT = time.process_time()
M = FindMinMaxElement(A)
eT = time.process_time()
T=  float(eT - sT)
print(A[M[0]],"-", A[M[1]], "-", "%.10f"% (T))
sT = time.process_time()
B = FindMinMaxElementEvident(A)
eT = time.process_time()
T= float( eT - sT )
print(A[B[0]],"-", A[B[1]], "-", "%.10f"% (T))
